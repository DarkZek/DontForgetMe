---
import { Icon } from 'astro-icon/components'

const now = new Date();

function getSuffix(date: number) {
    
    date %= 10

    if (date === 1) {
        return 'st'
    } else if (date === 2) {
        return 'nd'
    } else if (date === 3) {
        return 'rd'
    } else {
        return 'th'
    }
}

const { defaultInterval, offset1 } = Astro.props

const offset = offset1 || 1

---

<div
    class="calendar"
    interval={defaultInterval}
>
    <!-- Loop over the previous day and next 7 days to make icons -->
    {
        Array.from({ length: 9 }, (_, i) => {
            const date = new Date()
            date.setDate(now.getDate() + i);
            return (
                <div class="item">
                    <Icon name="noto:sun" size="28px" class="sun"/>
                    <Icon name="noto:shower" size="28px" class="water"/>
                    {
                        date.getDate() === now.getDate() ? (
                            <span>Now</span>
                        ) : (
                            <span>{date.getDate()}{getSuffix(date.getDate())}</span>
                        )
                    }
                </div>
            )
        })
    }
</div>

<script>

const calendar = document.querySelector('.calendar')

document.addEventListener('intervalSelected', (event) => {
    calendar!.setAttribute('interval', event.detail)
})

</script>

<style lang="scss" define:vars={{offset}}>

.calendar {
    display: flex;
    justify-content: space-around;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    max-width: 100%;
    overflow-x: auto;

    .item {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        width: 36px;
    }

    .water {
        display: none;
    }
}

.calendar {
    @for $i from 1 through 30 {
        &[interval="#{$i}"] .item:nth-child(#{$i}n + 1) {
            .water {
                display: block;
            }
            .sun {
                display: none;
            }
        }
    }
}

</style>